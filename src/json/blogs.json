[
    {
      "id": 1,
      "title": "DIY Electronic Scale in an AirPods Box",
      "slug": "electronic-scale-airpods-box",
      "date": "2025-03-21",
      "author": "Alexei Rusu",
      "tags": ["iot", "esp32", "arduino", "scale"],
      "thumbnail": "blogImages/scale.webp",
      "images": [
        "https://i.imgur.com/BmY229K.jpg",
        "https://i.imgur.com/LLvWE9C.jpg",
        "https://i.imgur.com/1ZcozNX.jpg"
      ],
      "content": "# Hidden Scale Inside an AirPods Box\n\n### I modified an **AirPods box** to house a small electronic scale powered by an ESP32.\n\n #### Problem and Solution:\n\n  I was on a mission to pull the perfect shot of espresso. I had all the essentialsâ€”an espresso machine, freshly ground coffee, and a good grinder. But one key element was missing: a digital scale with a tare function to precisely measure those crucial grams. Rather than buying one, I decided to put my skills as a software engineer to use and build my own. \n\n<img src='https://i.imgur.com/1ZcozNX.jpg' alt='project image' width=400 height=350 style='object-fit: cover;padding: 10px' />\n\n## Features\n- Measures up to 1kg\n- Tare Button\n- Display Module \n- Rechargeable battery powered\n\n## Components Used\n- ESP32 \n- I2C OLED Display Module  \n- Load Cell Weight Sensor \n- HX711 Weighing Sensors \n\n<img src='https://i.imgur.com/BmY229K.jpg' alt='project image' width=390 height=350 style='object-fit: cover; padding: 10px' /><img src='https://i.imgur.com/LLvWE9C.jpg' alt='project image' width=390 height=350 style='object-fit: cover; padding: 10px' />\n\n\n\n### Code\n\n",
      "code":"```cpp#include <Arduino.h>\n#include \"HX711.h\"\n#include \"soc/rtc.h\"\n#include <Wire.h>\n#include <Adafruit_GFX.h>\n#include <Adafruit_SSD1306.h>\n#include <Pushbutton.h>\n\n// HX711 circuit wiring\nconst int LOADCELL_DOUT_PIN = 16;\nconst int LOADCELL_SCK_PIN = 4;\n\nHX711 scale;\nint reading;\nint lastReading;\n#define CALIBRATION_FACTOR 1075.837\n\n#define SCREEN_WIDTH 128\n#define SCREEN_HEIGHT 32\n\n#define OLED_RESET -1\nAdafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);\n\n#define BUTTON_PIN 19\nPushbutton button(BUTTON_PIN);\n\nvoid displayWeight(int weight){\n  display.clearDisplay();\n  display.setTextSize(1);\n  display.setTextColor(WHITE);\n  display.setCursor(0, 5);\n  display.println(\"Weight:\");\n  display.display();\n  display.setCursor(60, 10);\n  display.setTextSize(2.5);\n  display.print(weight);\n  display.print(\" \");\n  display.print(\"g\");\n  display.display();\n}\n\nvoid setup() {\n  Serial.begin(115200);\n  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {\n    Serial.println(F(\"SSD1306 allocation failed\"));\n    for(;;);\n  }\n  delay(2000);\n  display.clearDisplay();\n  display.setTextColor(WHITE);\n  Serial.println(\"Initializing the scale\");\n  scale.begin(LOADCELL_DOUT_PIN, LOADCELL_SCK_PIN); \n\n  // this value is obtained by calibrating the scale with known weights, \n   in my case with a modern quarter which has a weight of 5.67 grams \n  scale.set_scale(CALIBRATION_FACTOR);\n\n  // reset the scale to 0 \n  scale.tare();\n}\n\nvoid loop() {\n  if (button.getSingleDebouncedPress()){\n    Serial.print(\"tare...\");\n    scale.tare();\n  }\n\n  if (scale.wait_ready_timeout(200)) {\n    reading = round(scale.get_units());\n    Serial.print(\"Weight: \");\n    Serial.println(reading);\n    if (reading != lastReading){\n      displayWeight(reading);\n    }\n    lastReading = reading;\n  }\n  else {\n    Serial.println(\"HX711 not found.\");\n  }\n}"
    }
  ]
  